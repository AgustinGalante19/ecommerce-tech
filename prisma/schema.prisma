generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  surname       String
  password      String
  email         String    @unique
  emailVerified DateTime?
  accounts      Account[]
  sessions      Session[]
}

model Category {
  categoryId   String         @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  Product      Product[]
  ProductOrder ProductOrder[]
}

model Product {
  productId         String   @id @default(auto()) @map("_id") @db.ObjectId
  name              String
  category          Category @relation(fields: [productCategoryId], references: [categoryId])
  productCategoryId String   @db.ObjectId
  price             Float
  description       String
  images            String[]
  features          String[]
}

model Order {
  id       String         @id @default(auto()) @map("_id") @db.ObjectId
  products ProductOrder[]
  userId   String
}

model ProductOrder {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  productId  String
  name       String
  price      Float
  quantity   Int
  userId     String   @db.ObjectId
  orderId    String   @db.ObjectId
  order      Order    @relation(fields: [orderId], references: [id])
  categoryId String   @db.ObjectId
  category   Category @relation(fields: [categoryId], references: [categoryId])
}
